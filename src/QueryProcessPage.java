
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ryan Fadholi
 */
public class QueryProcessPage extends javax.swing.JFrame {
    private DataCitra dataQuery;
    private CKlasifikasi ck;
    /**
     * Creates new form QueryProcessPage
     */
    public QueryProcessPage() {
        initComponents();
        //Sets the frame position to the center of the screen.
        this.setLocationRelativeTo(null);
        this.ck = new CKlasifikasi();
        this.classifiedPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        classifiedPanel = new javax.swing.JPanel();
        classified = new javax.swing.JLabel();
        imageDir = new javax.swing.JPanel();
        imagePosLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(520, 320));
        setPreferredSize(new java.awt.Dimension(520, 320));

        startBtn.setText("START");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("CANCEL");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Query Image"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        classifiedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Classification Result"));
        classifiedPanel.setMinimumSize(new java.awt.Dimension(298, 40));

        classified.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        classified.setText("[INSERT CLASSIFICATION HERE]");

        javax.swing.GroupLayout classifiedPanelLayout = new javax.swing.GroupLayout(classifiedPanel);
        classifiedPanel.setLayout(classifiedPanelLayout);
        classifiedPanelLayout.setHorizontalGroup(
            classifiedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classifiedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(classified)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        classifiedPanelLayout.setVerticalGroup(
            classifiedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(classified, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        imageDir.setBorder(javax.swing.BorderFactory.createTitledBorder("Image Directory"));
        imageDir.setMinimumSize(new java.awt.Dimension(298, 37));
        imageDir.setPreferredSize(new java.awt.Dimension(298, 37));

        imagePosLabel.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        imagePosLabel.setText("[DIRECTORY HERE]");

        javax.swing.GroupLayout imageDirLayout = new javax.swing.GroupLayout(imageDir);
        imageDir.setLayout(imageDirLayout);
        imageDirLayout.setHorizontalGroup(
            imageDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imageDirLayout.createSequentialGroup()
                .addComponent(imagePosLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        imageDirLayout.setVerticalGroup(
            imageDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePosLabel)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classifiedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(imageDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imageDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classifiedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        new StartupPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        ArrayList<DataCitra> dbData = ck.getAllImageData();
        ArrayList<DataEuclidean> euclidResults = new ArrayList<>();
        
        String hasilKlasifikasi;
        double closestMatch;
        
        for(DataCitra data : dbData){
            System.out.println("DATA OF IMAGE " + data.getImageID());
            euclidResults.add(new DataEuclidean(data.getImageID(),
                                                data.getKlasifikasi(),
                                                CommonFunctions.calculateEuclid(this.dataQuery, data)));
            System.out.println(CommonFunctions.calculateEuclid(this.dataQuery, data));
        }
        
        hasilKlasifikasi = euclidResults.get(0).getKlasifikasi();
        closestMatch = euclidResults.get(0).getValue();
        
        for(DataEuclidean result : euclidResults){
            if(result.getValue() < closestMatch){
                System.out.println(result.getValue() + " lebih kecil dari " + closestMatch);
                closestMatch = result.getValue();
                hasilKlasifikasi = result.getKlasifikasi();
            }
        }
        
        if(closestMatch <= 5.0){
            this.classified.setText(hasilKlasifikasi);
        } else {
            this.classified.setText("UNCLASSIFIED");
        }
        
        System.out.println(hasilKlasifikasi);
        this.classifiedPanel.setVisible(true);
        this.startBtn.setEnabled(false);
        this.cancelBtn.setText("CLOSE");
        
    }//GEN-LAST:event_startBtnActionPerformed

    public void setImageDir(String dir){
        this.imagePosLabel.setText(dir);
        BufferedImage rawIcon = CommonFunctions.getBufferedImage(dir);
        ImageIcon icon = CommonFunctions.getIconInstance(rawIcon, 
                                                            this.imageLabel.getWidth(),
                                                            this.imageLabel.getHeight());
        this.imageLabel.setIcon(icon);
        
        ArrayList<Double> queryValues = CommonFunctions.extractImage(rawIcon);
        this.dataQuery = new DataCitra(queryValues.get(0), queryValues.get(1), queryValues.get(2));
        System.out.println("Hitung Semua:");
        System.out.println("Mean:" + queryValues.get(0));
        System.out.println("SD:" + queryValues.get(1));
        System.out.println("Entropy:" + queryValues.get(2) );
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel classified;
    private javax.swing.JPanel classifiedPanel;
    private javax.swing.JPanel imageDir;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel imagePosLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton startBtn;
    // End of variables declaration//GEN-END:variables



}
